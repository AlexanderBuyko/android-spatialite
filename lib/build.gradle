plugins {
    id 'de.undercouch.download' version '2.1.0'
}

apply plugin: 'com.android.library'
apply plugin: 'de.undercouch.download'
apply plugin: 'com.github.dcendents.android-maven'

group = 'com.github.sevar83'

import de.undercouch.gradle.tasks.download.Download

gradle.projectsEvaluated {
    preBuild.dependsOn(buildSqlite)
}

android {
    compileSdkVersion 30
    buildToolsVersion "28.0.3"

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 30
        versionCode 1
        versionName project.version
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        consumerProguardFiles 'proguard-rules.pro'
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        abortOnError false
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    // ndk gradle support is still very bad so it's built with the regular ndk-build
    sourceSets.main.jni.srcDirs = ['src/main/none']
}

dependencies {
    implementation 'androidx.legacy:legacy-support-core-utils:1.0.0'
    implementation 'androidx.test:monitor:1.6.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.4'
    androidTestImplementation 'androidx.test:rules:1.5.0'
}

ext {
    sqliteDistributionUrl = 'http://sqlite.org/2016/sqlite-amalgamation-3150100.zip'
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.compile
    failOnError false;
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

task downloadSqlite(type: Download) {
    src project.sqliteDistributionUrl
    dest 'src/main/jni/ndk-modules/sqlite/sqlite.zip'
}

task installSqlite(dependsOn: downloadSqlite, type: Copy) {
    from zipTree(downloadSqlite.dest).matching {
        include '*/sqlite3.*'
        eachFile { it.setPath(it.getName()) }
    }
    into 'src/main/jni/ndk-modules/sqlite'
}

//def ndkDir = System.getenv('ANDROID_NDK_HOME') ?: properties.getProperty('ndk.dir')

task buildSqlite(dependsOn: installSqlite, type: Exec) {
    workingDir 'src/main/jni'
    commandLine '/Users/alexanderbuyko/Library/Android/sdk/ndk/16.1.4479499/ndk-build', '-j8'   // Add NDK_DEBUG=1 for debug symbols or V=1 for verbose building output
}